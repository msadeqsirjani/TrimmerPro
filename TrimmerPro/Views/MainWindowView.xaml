<hc:Window x:Class="TrimmerPro.Views.MainWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:prism="http://prismlibrary.com/"
           xmlns:viewModels="clr-namespace:TrimmerPro.ViewModels"
           xmlns:views="clr-namespace:TrimmerPro.Views"
           prism:ViewModelLocator.AutoWireViewModel="True"
           mc:Ignorable="d"
           d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
           Title="{Binding Title}"
           WindowStartupLocation="CenterScreen"
           ShowTitle="True"
           Height="450"
           Width="800">
    <hc:Window.NonClientAreaContent>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1"
                    x:Name="ConfigButton"
                    HorizontalAlignment="Right"
                    Style="{StaticResource ButtonIcon}"
                    Foreground="{DynamicResource PrimaryTextBrush}"
                    hc:IconElement.Geometry="{StaticResource ConfigGeometry}"
                    Click="ConfigButton_OnClick" />
            <Popup Grid.Column="1"
                   x:Name="PopupConfig"
                   AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=ConfigButton}"
                   HorizontalOffset="-25"
                   VerticalOffset="6"
                   StaysOpen="False">
                <Border Background="{DynamicResource SecondaryRegionBrush}"
                        CornerRadius="4"
                        Margin="16"
                        Effect="{StaticResource EffectShadow2}">
                    <StackPanel Margin="10"
                                Button.Click="ButtonSkins_OnClick">
                        <Button Tag="{x:Static hc:SkinType.Default}"
                                Style="{StaticResource ButtonCustom}">
                            <Border Background="White"
                                    Width="32"
                                    Height="21"
                                    CornerRadius="2"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderBrush}" />
                        </Button>
                        <Button Tag="{x:Static hc:SkinType.Dark}"
                                Style="{StaticResource ButtonCustom}"
                                Margin="0,10,0,0">
                            <Border Background="Black"
                                    Width="32"
                                    Height="21"
                                    CornerRadius="2"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderBrush}" />
                        </Button>
                        <Button Tag="{x:Static hc:SkinType.Violet}"
                                Style="{StaticResource ButtonCustom}"
                                Margin="0,10,0,0">
                            <Border Background="DarkViolet"
                                    Width="32"
                                    Height="21"
                                    CornerRadius="2"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource BorderBrush}" />
                        </Button>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </hc:Window.NonClientAreaContent>
    <Border Background="{StaticResource CloudDrawingBrush}"
            BorderBrush="{DynamicResource BorderBrush}"
            BorderThickness="0 1 0 0">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="240"
                                  MinWidth="240"
                                  MaxWidth="400" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <views:LeftMainContentView Grid.Column="0" />
            <views:MainContentView Grid.Column="1" />
            <GridSplitter Margin="0 26 10 26"
                          Grid.Column="0"
                          HorizontalAlignment="Right"
                          Width="4"
                          Background="Transparent" />
            <hc:ScrollViewer Grid.Column="1"
                             VerticalScrollBarVisibility="Hidden"
                             HorizontalAlignment="Right"
                             IsInertiaEnabled="True"
                             IsPenetrating="True">
                <StackPanel hc:Growl.GrowlParent="True"
                            VerticalAlignment="Top"
                            Margin="0 10 10 10" />
            </hc:ScrollViewer>
            <hc:NotifyIcon Grid.Column="0"
                           Name="Notify"
                           Text="UrlShortener">
                <hc:NotifyIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="hc:ControlCommands.PushMainWindow2Top"
                                  Header="Open Panel" />
                        <MenuItem Click="MenuItem_OnClick"
                                  Header="Exit" />
                    </ContextMenu>
                </hc:NotifyIcon.ContextMenu>
                <hc:Interaction.Triggers>
                    <hc:EventTrigger EventName="Click">
                        <hc:EventToCommand Command="hc:ControlCommands.PushMainWindow2Top" />
                    </hc:EventTrigger>
                </hc:Interaction.Triggers>
            </hc:NotifyIcon>
        </Grid>
    </Border>
</hc:Window>